SmartClientTypeScriptDefinitionGenerator
By Kyle White (http://kmwTech.com)
Generated from SmartClient version SNAPSHOT_v11.1d_2017-05-10

Errors during generation
Generated: 5/11/2017 4:22:58 PM by kwhite

Summary
Total Types  : 229
Total Classes: 309
Total Objects: 67
Total Methods: 3555

Attributes missing R flag: 45 (Should they all have an R flag?)
1. attr:Calendar.eventCanvas, Flags=A
2. attr:Calendar.eventCanvasButtonLayout, Flags=A
3. attr:Calendar.eventCanvasCloseButton, Flags=A
4. attr:Calendar.eventCanvasContextButton, Flags=A
5. attr:Calendar.eventCanvasGripper, Flags=A
6. attr:Calendar.eventCanvasGripperIcon, Flags=A
7. attr:Calendar.eventCanvasHResizer, Flags=A
8. attr:Calendar.eventCanvasLabel, Flags=A
9. attr:Calendar.eventCanvasVResizer, Flags=A
10. attr:Calendar.eventWindow, Flags=A
11. attr:Calendar.indicatorCanvas, Flags=A
12. attr:Calendar.zoneCanvas, Flags=A
13. attr:Canvas.scrollbarConstructor, Flags=IA
14. attr:CubeGrid.facets, Flags=I
15. attr:DataSource.enumConstantProperty, Flags=IA
16. attr:DataSource.enumOrdinalProperty, Flags=IA
17. attr:DataSource.enumTranslateStrategy, Flags=IA
18. attr:DateItem.maskDateSeparator, Flags=IA
19. attr:DateItem.useMask, Flags=IA
20. attr:DrawItem.shapeData, Flags=I
21. attr:DrawOval.radius, Flags=IW
22. attr:DynamicForm.valuesManager, Flags=IA
23. attr:Img.name, Flags=IA
24. attr:Layout.resizeBar, Flags=A
25. attr:ListGrid.fastCellUpdates, Flags=I
26. attr:ListGrid.leaveHeaderMenuButtonSpace, Flags=IWA
27. attr:ListGrid.operatorIcon, Flags=I
28. attr:ListGridField.leaveHeaderMenuButtonSpace, Flags=IWA
29. attr:PortalLayout.column, Flags=A
30. attr:PortalLayout.portlets, Flags=I
31. attr:PortalLayout.row, Flags=A
32. attr:PortalLayout.rowLayout, Flags=A
33. attr:RadioGroupItem.disabledValues, Flags=I
34. attr:ResultSet.initialData, Flags=IA
35. attr:ResultSet.initialLength, Flags=IA
36. attr:ResultSet.sortSpecifiers, Flags=IA
37. attr:RichTextItem.controlGroups, Flags=IA
38. attr:SectionStackSection.canCollapse, Flags=I
39. attr:SectionStackSection.canDropBefore, Flags=I
40. attr:SectionStackSection.canReorder, Flags=I
41. attr:SectionStackSection.expanded, Flags=I
42. attr:SectionStackSection.hidden, Flags=I
43. attr:SectionStackSection.items, Flags=I
44. attr:SectionStackSection.resizeable, Flags=I
45. attr:SectionStackSection.showHeader, Flags=I


Methods with bad flags: 3 (methods should not have any flags except A?)
1. class:CubeGrid.collapseField, Flags=facetValueMap
2. class:CubeGrid.expandField, Flags=facetValueMap
3. class:Canvas.getChildTabPosition, Flags=child


Classes without inheritsFrom attribute: 202 (Maybe it should inherit from Class, maybe it's really supposed to be an object or maybe it's a mistake)
1. AdvancedHiliteEditor
2. AutoFitButton
3. AutoTest
4. BaseWidget
5. BatchUploader
6. BooleanItem
7. Browser
8. Callbacks
9. CanvasEditProxy
10. CanvasItem
11. CellSelection
12. CheckboxItemEditProxy
13. Class
14. ColorItem
15. ColorPicker
16. ColumnTree
17. Comm
18. CubeGrid
19. DatabaseBrowser
20. DataSource
21. DataSourceField
22. DataView
23. Date
24. DateChooser
25. DateGrid
26. DateItemEditProxy
27. DateRangeDialog
28. DateUtil
29. DecisionGateway
30. Deck
31. DetailViewerEditProxy
32. DMI
33. DOMGrid
34. DrawItemEditProxy
35. DrawLabelEditProxy
36. DrawPaneEditProxy
37. EBay
38. EditContext
39. EditPane
40. EditProxy
41. EditTree
42. EventCanvas
43. EventHandler
44. EventWindow
45. Facet
46. FacetChartEditProxy
47. FacetValue
48. FieldPicker
49. FieldPickerField
50. FieldPickerWindow
51. FileLoader
52. FilterClause
53. FlowLayout
54. FormEditProxy
55. FormItem
56. FormItemEditProxy
57. GridEditProxy
58. GridRenderer
59. GroupingMessages
60. HibernateBrowser
61. HiddenPalette
62. HiliteRule
63. History
64. HLayout
65. Hover
66. HStack
67. HTMLPane
68. IButton
69. IconButton
70. IconMenuButton
71. IMenuButton
72. ImgButton
73. ImgEditProxy
74. ImgSectionHeader
75. ImgSplitbar
76. ImgTab
77. IndicatorCanvas
78. IPickTreeItem
79. isc
80. ITreeMenuButton
81. JSON
82. JSONEncoder
83. JSSyntaxHiliter
84. LabelEditProxy
85. LayoutEditProxy
86. ListPalette
87. ListPropertiesDialog
88. ListPropertiesPane
89. Log
90. LoginDialog
91. Mail
92. MathFunction
93. Menu
94. MenuButton
95. MenuEditProxy
96. MenuPalette
97. Messaging
98. MiniDateRangeItem
99. MockDataSource
100. MultiFilePicker
101. MultiGroupDialog
102. MultiGroupPanel
103. MultiSortDialog
104. MultiSortPanel
105. NativeScrollbar
106. NavPanel
107. NumberUtil
108. Offline
109. OperationBinding
110. Operators
111. Page
112. PickListMenu
113. PortalLayout
114. Portlet
115. PresetDateRangeItem
116. PrintCanvas
117. PrintWindow
118. Process
119. ProcessElement
120. ProcessSequence
121. Progressbar
122. ProgressbarEditProxy
123. PropertySheet
124. RangeSlider
125. RecordEditor
126. RestDataSource
127. ResultSet
128. ResultTree
129. RibbonBar
130. RibbonGroup
131. RichTextCanvas
132. RichTextEditor
133. RPCManager
134. RPCRequest
135. RPCResponse
136. SchemaSet
137. ScriptTask
138. Scrollbar
139. ScrollThumb
140. SectionHeader
141. SectionStack
142. SectionStackEditProxy
143. Selection
144. SelectionOutline
145. SelectionTreeMenu
146. SelectItemEditProxy
147. SelectOtherItem
148. ServerObject
149. ServiceTask
150. SimpleTabButton
151. SimpleTile
152. SimpleType
153. Snapbar
154. Sound
155. Splitbar
156. SplitPaneEditProxy
157. StatefulCanvasEditProxy
158. StateTask
159. StretchImgButton
160. String
161. SummaryBuilder
162. SyntaxHiliter
163. TabBar
164. TabIndexManager
165. TableView
166. TabSetEditProxy
167. Task
168. TextAreaItemEditProxy
169. TextExportSettings
170. TextImportSettings
171. TextItemEditProxy
172. TextSettings
173. TilePalette
174. Time
175. Timeline
176. Timer
177. ToolStrip
178. ToolStripButton
179. ToolStripGroup
180. ToolStripMenuButton
181. ToolStripResizer
182. ToolStripSeparator
183. TooLStripSeparatorEditProxy
184. ToolStripSpacer
185. Tree
186. TreeGrid
187. TreePalette
188. UserTask
189. Validator
190. ValuesManager
191. VisualBuilder
192. VLayout
193. VStack
194. WebService
195. WindowEditProxy
196. WSDataSource
197. WSRequest
198. XJSONDataSource
199. XMLSyntaxHiliter
200. XMLTools
201. XORGateway
202. ZoneCanvas


Object attributes marked with W flag: 240 (attributes on objects are always read only on the object. There may be other methods in parent classes to modify the attribute)
1. attr:AdvancedCriteria.strictSQLFiltering
2. attr:CalendarEvent.backgroundColor
3. attr:CalendarEvent.borderColor
4. attr:CalendarEvent.canDrag
5. attr:CalendarEvent.canEdit
6. attr:CalendarEvent.canEditLane
7. attr:CalendarEvent.canEditSublane
8. attr:CalendarEvent.canResize
9. attr:CalendarEvent.description
10. attr:CalendarEvent.duration
11. attr:CalendarEvent.durationUnit
12. attr:CalendarEvent.endDate
13. attr:CalendarEvent.headerBackgroundColor
14. attr:CalendarEvent.headerBorderColor
15. attr:CalendarEvent.headerTextColor
16. attr:CalendarEvent.lane
17. attr:CalendarEvent.name
18. attr:CalendarEvent.startDate
19. attr:CalendarEvent.sublane
20. attr:CalendarEvent.textColor
21. attr:DetailViewerField.canHilite
22. attr:DetailViewerField.cellStyle
23. attr:DetailViewerField.dateFormatter
24. attr:DetailViewerField.decimalPad
25. attr:DetailViewerField.decimalPrecision
26. attr:DetailViewerField.hiliteIconHeight
27. attr:DetailViewerField.hiliteIconLeftPadding
28. attr:DetailViewerField.hiliteIconRightPadding
29. attr:DetailViewerField.hiliteIconSize
30. attr:DetailViewerField.hiliteIconWidth
31. attr:DetailViewerField.imageHeight
32. attr:DetailViewerField.imageSize
33. attr:DetailViewerField.imageURLPrefix
34. attr:DetailViewerField.imageWidth
35. attr:DetailViewerField.linkText
36. attr:DetailViewerField.linkTextProperty
37. attr:DetailViewerField.linkURLPrefix
38. attr:DetailViewerField.linkURLSuffix
39. attr:DetailViewerField.printCellStyle
40. attr:DetailViewerField.target
41. attr:DetailViewerField.timeFormatter
42. attr:DetailViewerRecord.linkText
43. attr:DiscoverTreeSettings.nameProperty
44. attr:DiscoverTreeSettings.newChildrenProperty
45. attr:DiscoverTreeSettings.scanMode
46. attr:DiscoverTreeSettings.tieMode
47. attr:DiscoverTreeSettings.typeProperty
48. attr:EditNode.canDuplicate
49. attr:FileSpec.fileFormat
50. attr:FileSpec.fileName
51. attr:FileSpec.fileType
52. attr:FiscalCalendar.defaultDate
53. attr:FiscalCalendar.defaultMonth
54. attr:FiscalCalendar.defaultYearMode
55. attr:FiscalCalendar.fiscalYears
56. attr:FiscalYear.date
57. attr:FiscalYear.fiscalYear
58. attr:FiscalYear.month
59. attr:FiscalYear.year
60. attr:FormItemIcon.baseStyle
61. attr:FormItemIcon.disabled
62. attr:FormItemIcon.disableOnReadOnly
63. attr:FormItemIcon.height
64. attr:FormItemIcon.neverDisable
65. attr:FormItemIcon.prompt
66. attr:FormItemIcon.showDisabledOnFocus
67. attr:FormItemIcon.showFocused
68. attr:FormItemIcon.showFocusedWithItem
69. attr:FormItemIcon.showOnFocus
70. attr:FormItemIcon.showOver
71. attr:FormItemIcon.showOverWhen
72. attr:FormItemIcon.src
73. attr:FormItemIcon.text
74. attr:FormItemIcon.width
75. attr:HeaderSpan.headerBaseStyle
76. attr:HeaderSpan.headerTitleStyle
77. attr:Hilite.backgroundColor
78. attr:Hilite.disabled
79. attr:Hilite.textColor
80. attr:Hilite.title
81. attr:ImgProperties.extraStuff
82. attr:ImgProperties.height
83. attr:ImgProperties.imgDir
84. attr:ImgProperties.name
85. attr:ImgProperties.src
86. attr:ImgProperties.width
87. attr:Lane.eventStyleName
88. attr:ListGridField.align
89. attr:ListGridField.applyAfterSummary
90. attr:ListGridField.autoComplete
91. attr:ListGridField.autoFetchDisplayMap
92. attr:ListGridField.autoFitWidthApproach
93. attr:ListGridField.baseStyle
94. attr:ListGridField.canEdit
95. attr:ListGridField.canFilter
96. attr:ListGridField.canGroupBy
97. attr:ListGridField.canHilite
98. attr:ListGridField.canSort
99. attr:ListGridField.canSortClientOnly
100. attr:ListGridField.canToggle
101. attr:ListGridField.cellAlign
102. attr:ListGridField.dateFormatter
103. attr:ListGridField.decimalPad
104. attr:ListGridField.decimalPrecision
105. attr:ListGridField.defaultFilterValue
106. attr:ListGridField.defaultValue
107. attr:ListGridField.displayField
108. attr:ListGridField.displayFormat
109. attr:ListGridField.displayValueFromRecord
110. attr:ListGridField.editorImageURLPrefix
111. attr:ListGridField.editorImageURLSuffix
112. attr:ListGridField.editorProperties
113. attr:ListGridField.editorType
114. attr:ListGridField.editorValueIconHeight
115. attr:ListGridField.editorValueIcons
116. attr:ListGridField.editorValueIconWidth
117. attr:ListGridField.editorValueMap
118. attr:ListGridField.emptyCellValue
119. attr:ListGridField.enterKeyEditAction
120. attr:ListGridField.escapeHTML
121. attr:ListGridField.escapeKeyEditAction
122. attr:ListGridField.exportFieldWidth
123. attr:ListGridField.filterEditorProperties
124. attr:ListGridField.filterEditorType
125. attr:ListGridField.filterEditorValueMap
126. attr:ListGridField.filterOnKeypress
127. attr:ListGridField.headerBaseStyle
128. attr:ListGridField.headerHoverDelay
129. attr:ListGridField.headerTitleStyle
130. attr:ListGridField.hiliteIconHeight
131. attr:ListGridField.hiliteIconLeftPadding
132. attr:ListGridField.hiliteIconRightPadding
133. attr:ListGridField.hiliteIconSize
134. attr:ListGridField.hiliteIconWidth
135. attr:ListGridField.hoverDelay
136. attr:ListGridField.hoverWidth
137. attr:ListGridField.hoverWrap
138. attr:ListGridField.ignoreKeyboardClicks
139. attr:ListGridField.imageHeight
140. attr:ListGridField.imageSize
141. attr:ListGridField.imageURLPrefix
142. attr:ListGridField.imageURLSuffix
143. attr:ListGridField.imageWidth
144. attr:ListGridField.inputFormat
145. attr:ListGridField.leaveHeaderMenuButtonSpace
146. attr:ListGridField.linkText
147. attr:ListGridField.linkTextProperty
148. attr:ListGridField.linkURLPrefix
149. attr:ListGridField.linkURLSuffix
150. attr:ListGridField.maxWidth
151. attr:ListGridField.minWidth
152. attr:ListGridField.optionCriteria
153. attr:ListGridField.optionDataSource
154. attr:ListGridField.required
155. attr:ListGridField.shouldPrint
156. attr:ListGridField.showAlternateStyle
157. attr:ListGridField.showDefaultContextMenu
158. attr:ListGridField.showHilitesInGroupSummary
159. attr:ListGridField.showHover
160. attr:ListGridField.showHoverComponents
161. attr:ListGridField.showTitle
162. attr:ListGridField.showValueIconOnly
163. attr:ListGridField.sortByDisplayField
164. attr:ListGridField.sortByMappedValue
165. attr:ListGridField.sortDirection
166. attr:ListGridField.summaryTitle
167. attr:ListGridField.summaryValue
168. attr:ListGridField.suppressValueIcon
169. attr:ListGridField.target
170. attr:ListGridField.timeFormatter
171. attr:ListGridField.title
172. attr:ListGridField.userFormula
173. attr:ListGridField.userSummary
174. attr:ListGridField.validateOnChange
175. attr:ListGridField.validators
176. attr:ListGridField.valueField
177. attr:ListGridField.valueIconHeight
178. attr:ListGridField.valueIconLeftPadding
179. attr:ListGridField.valueIconOrientation
180. attr:ListGridField.valueIconRightPadding
181. attr:ListGridField.valueIcons
182. attr:ListGridField.valueIconSize
183. attr:ListGridField.valueIconWidth
184. attr:ListGridField.valueMap
185. attr:ListGridField.width
186. attr:ListGridField.wrap
187. attr:ListGridRecord._baseStyle
188. attr:ListGridRecord._canRemove
189. attr:ListGridRecord.customStyle
190. attr:ListGridRecord.detailDS
191. attr:ListGridRecord.includeInSummary
192. attr:ListGridRecord.isGridSummary
193. attr:ListGridRecord.isGroupSummary
194. attr:ListGridRecord.linkText
195. attr:ListGridRecord.singleCellValue
196. attr:MetricSettings.chartType
197. attr:MetricSettings.dataColors
198. attr:MetricSettings.filled
199. attr:MetricSettings.proportional
200. attr:MetricSettings.stacked
201. attr:NavigationBarViewState.alwaysShowLeftButtonTitle
202. attr:NavigationBarViewState.controls
203. attr:NavigationBarViewState.leftButtonTitle
204. attr:NavigationBarViewState.shortLeftButtonTitle
205. attr:NavigationBarViewState.showLeftButton
206. attr:NavigationBarViewState.title
207. attr:SectionStackSection.showClippedTitleOnHover
208. attr:SummaryConfiguration.badFormulaResultValue
209. attr:SummaryConfiguration.invalidSummaryValue
210. attr:Tab.canClose
211. attr:Tab.canEditTitle
212. attr:Tab.closeIcon
213. attr:Tab.closeIconSize
214. attr:Tab.disabled
215. attr:Tab.icon
216. attr:Tab.iconHeight
217. attr:Tab.iconSize
218. attr:Tab.iconWidth
219. attr:Tab.ID
220. attr:Tab.name
221. attr:Tab.pane
222. attr:Tab.pickerTitle
223. attr:Tab.prompt
224. attr:Tab.title
225. attr:Tab.width
226. attr:TestFunctionResult.emptyTestValue
227. attr:TestFunctionResult.errorText
228. attr:TestFunctionResult.failedExecution
229. attr:TestFunctionResult.failedGeneration
230. attr:TestFunctionResult.record
231. attr:TestFunctionResult.result
232. attr:TileRecord.tileConstructor
233. attr:TileRecord.tileProperties
234. attr:TreeGridField.treeField
235. attr:TreeNode.children
236. attr:TreeNode.icon
237. attr:TreeNode.showDropIcon
238. attr:TreeNode.showOpenIcon
239. attr:UserFormula.text
240. attr:UserSummary.text



Values with missing references (distinct): 114
BAD: These are possible values of types that refer to a classAttr that doesn't exist.
1. Canvas.ABSOLUTE
2. Canvas.AUTO
3. Canvas.BOTTOM
4. Canvas.CENTER
5. Canvas.CLIP_H
6. Canvas.CLIP_V
7. Canvas.COPY
8. Canvas.DEFAULT
9. Canvas.DOWN
10. Canvas.HAND
11. Canvas.HELP
12. Canvas.HIDDEN
13. Canvas.INHERIT
14. Canvas.LEFT
15. Canvas.MOVE
16. Canvas.NO_REPEAT
17. Canvas.NORMAL
18. Canvas.RELATIVE
19. Canvas.REPEAT
20. Canvas.REPEAT_X
21. Canvas.REPEAT_Y
22. Canvas.RIGHT
23. Canvas.SCROLL
24. Canvas.STRETCH
25. Canvas.TEXT
26. Canvas.TILE
27. Canvas.TOP
28. Canvas.UP
29. Canvas.VISIBLE
30. Canvas.WAIT
31. DateItem.DAY_MONTH
32. DateItem.DAY_MONTH_YEAR
33. DateItem.MONTH_DAY
34. DateItem.MONTH_DAY_YEAR
35. DateItem.MONTH_YEAR
36. DateItem.YEAR_MONTH
37. DateItem.YEAR_MONTH_DAY
38. DrawLabel.CENTER
39. DrawLabel.END
40. DrawLabel.LEFT
41. DrawLabel.RIGHT
42. DrawLabel.START
43. DynamicForm.GET
44. DynamicForm.MULTIPART
45. DynamicForm.NORMAL
46. DynamicForm.POST
47. Layout.FILL
48. Layout.HORIZONTAL
49. Layout.NONE
50. Layout.VERTICAL
51. ListGrid.AFTER
52. ListGrid.BEFORE
53. ListGrid.BETWEEN
54. ListGrid.BODY
55. ListGrid.BOTH
56. ListGrid.CLICK
57. ListGrid.CLICK_OUTSIDE
58. ListGrid.DOUBLE_CLICK
59. ListGrid.DOWN_ARROW_KEYPRESS
60. ListGrid.EDIT_FIELD_CHANGE
61. ListGrid.ENTER_KEYPRESS
62. ListGrid.ESCAPE_KEYPRESS
63. ListGrid.NONE
64. ListGrid.OVER
65. ListGrid.PROGRAMMATIC
66. ListGrid.SHIFT_TAB_KEYPRESS
67. ListGrid.TAB_KEYPRESS
68. ListGrid.UP_ARROW_KEYPRESS
69. Log.DEBUG
70. Log.ERROR
71. Log.FATAL
72. Log.INFO
73. Log.WARN
74. Page.FIRE_ONCE
75. Selection.MULTIPLE
76. Selection.NONE
77. Selection.SIMPLE
78. Selection.SINGLE
79. StatefulCanvas.BUTTON
80. StatefulCanvas.CHECKBOX
81. StatefulCanvas.FOCUSED
82. StatefulCanvas.RADIO
83. StatefulCanvas.SELECTED
84. StatefulCanvas.STATE_DISABLED
85. StatefulCanvas.STATE_DOWN
86. StatefulCanvas.STATE_OVER
87. StatefulCanvas.STATE_UP
88. StatefulCanvas.UNSELECTED
89. TableView.GROUPED
90. TableView.NAVICON_ONLY
91. TableView.PLAIN
92. TableView.SUMMARY_DATA
93. TableView.SUMMARY_FULL
94. TableView.SUMMARY_INFO
95. TableView.TITLE_DESCRIPTION
96. TableView.TITLE_ONLY
97. TableView.WHOLE_RECORD
98. TextAreaItem.HARD
99. TextAreaItem.OFF
100. TextAreaItem.SOFT
101. TextItem.DEFAULT
102. TextItem.LOWER
103. TextItem.UPPER
104. Tree.FOLDERS_LOADED
105. Tree.LOADED
106. Tree.LOADED_PARTIAL_CHILDREN
107. Tree.LOADING
108. Tree.UNLOADED
109. Validator.DISABLED
110. Validator.HIDDEN
111. Validator.READONLY
112. Window.HORIZONTAL
113. Window.NONE
114. Window.VERTICAL

Values with found references (distinct): 0
GOOD: These are possible values of types that refer to a classAttr that was found.

==== Should string type values have quotes or not? ====
Contrained String Type Values with quotes: 216
Contrained String Type Values without quotes: 657


==== Values with a period probably means a reference to a constant instead of the actual string ====
Contrained String Type Values with period: 130

==== How are array attributes defined? ====
array of: 1
Array of: 225
Array[] of: 10
array[] of: 0
Just Array or array: 10

Attributes suspected as string types but do not have the baseType set: 83.
=== identifier:23 ===
1. attr:DataBoundComponent.canEditFieldAttribute, valueType=identifier 
2. attr:DataSourceField.name, valueType=identifier 
3. attr:DynamicForm.canEditFieldAttribute, valueType=identifier 
4. attr:FormItem.criteriaField, valueType=identifier 
5. attr:FormItem.ID, valueType=identifier 
6. attr:FormItem.name, valueType=identifier 
7. attr:FormItem.pickerIconName, valueType=identifier 
8. attr:FormItemIcon.name, valueType=identifier 
9. attr:Gradient.id, valueType=identifier 
10. attr:HeaderSpan.name, valueType=identifier 
11. attr:Hilite.fieldName, valueType=identifier 
12. attr:ListGridField.defaultGroupingMode, valueType=identifier 
13. attr:ListGridField.groupingMode, valueType=identifier 
14. attr:ListGridField.name, valueType=identifier 
15. attr:MathFunction.name, valueType=identifier 
16. attr:NavItem.id, valueType=identifier 
17. attr:NavPanel.currentItemId, valueType=identifier 
18. attr:Operator.textTitleProperty, valueType=identifier 
19. attr:Operator.titleProperty, valueType=identifier 
20. attr:SimpleType.inheritsFrom, valueType=identifier 
21. attr:SimpleType.name, valueType=identifier 
22. attr:Tab.ID, valueType=identifier 
23. attr:Tab.name, valueType=identifier 
=== URL:42 ===
1. attr:ActiveXControl.codeBase, valueType=URL 
2. attr:Applet.archive, valueType=URL 
3. attr:Applet.code, valueType=URL 
4. attr:Applet.codeBase, valueType=URL 
5. attr:Applet.src, valueType=URL 
6. attr:Canvas.appImgDir, valueType=URL 
7. attr:Canvas.skinImgDir, valueType=URL 
8. attr:DataSource.dataURL, valueType=URL 
9. attr:DateChooser.nextMonthIcon, valueType=URL 
10. attr:DateChooser.nextMonthIconRTL, valueType=URL 
11. attr:DateChooser.nextYearIcon, valueType=URL 
12. attr:DateChooser.nextYearIconRTL, valueType=URL 
13. attr:DateChooser.prevMonthIcon, valueType=URL 
14. attr:DateChooser.prevMonthIconRTL, valueType=URL 
15. attr:DateChooser.prevYearIcon, valueType=URL 
16. attr:DateChooser.prevYearIconRTL, valueType=URL 
17. attr:DrawImage.src, valueType=URL 
18. attr:DynamicForm.validationURL, valueType=URL 
19. attr:EdgedCanvas.skinImgDir, valueType=URL 
20. attr:Flashlet.codeBase, valueType=URL 
21. attr:Flashlet.pluginsPage, valueType=URL 
22. attr:Flashlet.src, valueType=URL 
23. attr:FusionChart.chartsBaseURL, valueType=URL 
24. attr:FusionChart.chartURL, valueType=URL 
25. attr:HTMLFlow.contentsURL, valueType=URL 
26. attr:ImgProperties.imgDir, valueType=URL 
27. attr:ImgProperties.src, valueType=URL 
28. attr:ImgTab.labelSkinImgDir, valueType=URL 
29. attr:ImgTab.skinImgDir, valueType=URL 
30. attr:ListGrid.headerMenuButtonIcon, valueType=URL 
31. attr:ListGrid.skinImgDir, valueType=URL 
32. attr:Mail.templateFile, valueType=URL 
33. attr:MiniNavControl.skinImgDir, valueType=URL 
34. attr:OperationBinding.dataURL, valueType=URL 
35. attr:RecordEditor.skinImgDir, valueType=URL 
36. attr:RPCRequest.actionURL, valueType=URL 
37. attr:Scrollbar.skinImgDir, valueType=URL 
38. attr:StretchImgButton.labelSkinImgDir, valueType=URL 
39. attr:SVG.pluginsPage, valueType=URL 
40. attr:SVG.src, valueType=URL 
41. attr:ToolStripSeparator.skinImgDir, valueType=URL 
42. attr:ViewLoader.viewURL, valueType=URL 
=== DOMElement:2 ===
1. attr:Canvas.htmlElement, valueType=DOMElement 
2. attr:DOMGrid.rootElement, valueType=DOMElement 
=== keyChar:1 ===
1. attr:FormItem.accessKey, valueType=keyChar 
=== CSSStyle:1 ===
1. attr:Dialog.messageStyle, valueType=CSSStyle 
=== id:2 ===
1. attr:CubeGrid.cellIdProperty, valueType=id 
2. attr:CubeGrid.valueProperty, valueType=id 
=== stringMethod:2 ===
1. attr:ListGridField.formatGridSummary, valueType=stringMethod 
2. attr:ListGridField.formatGroupSummary, valueType=stringMethod 
=== HTML:8 ===
1. attr:Applet.altHTML, valueType=HTML 
2. attr:GroupNode.groupTitle, valueType=HTML 
3. attr:Hilite.htmlAfter, valueType=HTML 
4. attr:Hilite.htmlBefore, valueType=HTML 
5. attr:Hilite.replacementValue, valueType=HTML 
6. attr:ListGridRecord.singleCellValue, valueType=HTML 
7. attr:MenuItem.title, valueType=HTML 
8. attr:TreeNode.title, valueType=HTML 
=== Field:2 ===
1. attr:FormulaBuilder.field, valueType=Field 
2. attr:SummaryBuilder.field, valueType=Field 

Method parameters with missing name: 15
1. method:TileLayout.setTileHeight, type='Integer', name=''
2. method:TileLayout.setTileSize, type='Integer', name=''
3. method:ListGrid.setCriteria, type='Criteria or AdvancedCriteria', name=''
4. method:FilterBuilder.setTopOperatorAppearance, type='TopOperatorAppearance', name=''
5. method:DynamicForm.setTitleOrientation, type='TitleOrientation', name=''
6. method:TileLayout.setTileHMargin, type='Integer', name=''
7. method:TileLayout.setTileVMargin, type='Integer', name=''
8. method:Gauge.setSectors, type='Array of GaugeSector', name=''
9. method:FormulaBuilder.getSamplePrompt, type='TestFunctionResult', name=''
10. method:SummaryBuilder.setSummary, type='String', name=''
11. method:FormItem.setTabIndex, type='Integer', name=''
12. method:TileLayout.setTileMargin, type='Integer', name=''
13. method:TileLayout.setTileWidth, type='Integer', name=''
14. classMethod:DataSource.getFieldValue, type='dataPath', name=''
15. classMethod:DataSource.getFieldValue, type='component', name=''
16. classMethod:DataSource.getFieldValue, type='reason', name=''
17. method:FormulaBuilder.setFormula, type='String', name=''


Method parameters with bad name: 1
1. method:CubeGrid.hiliteCell, type='string', name='[]'

Methods with one or more parameters missing a type: 7
1. class:Tree.node, ParamName=node, type=
2. class:FormItem.value, ParamName=value, type=
3. class:ColumnTree.ListGrid, ParamName=ListGrid, type=
4. class:ColumnTree.TreeNode, ParamName=TreeNode, type=
5. class:Canvas.accessKey, ParamName=accessKey, type=
6. class:isc.enable, ParamName=enable, type=
7. class:Time.logicalTime, ParamName=logicalTime, type=
8. class:Time.logicalTime, ParamName=logicalTime, type=


Methods with required parameter after optional parameter: 7
(Required parameters should all be listed BEFORE optional parameters)
1. classMethod:Class.markUnsupportedMethods
2. classMethod:DMI.call
3. classMethod:TabIndexManager.shiftFocus
4. classMethod:TabIndexManager.shiftFocusWithinGroup
5. classMethod:XMLTools.loadWSDL
6. classMethod:XMLTools.loadXMLSchema
7. method:ListGrid.getBaseStyle


Setter Methods with parameter type that does not match the attribute type: 83
1. method:AdaptiveMenu.setItems, attrType='Array of MenuItem', setter Type = 'Array of MenuItem | MenuItem'
2. method:Button.setIcon, attrType='SCImgURL', setter Type = 'URL'
3. method:Button.setIconOrientation, attrType='string', setter Type = '"left" or "right"'
4. method:Calendar.setData, attrType='Array[] of CalendarEvent', setter Type = 'List of CalendarEvent'
5. method:Canvas.setAccessKey, attrType='string', setter Type = ''
6. method:Canvas.setBackgroundImage, attrType='SCImgURL', setter Type = 'string'
7. method:Canvas.setClassName, attrType='CSSStyleName', setter Type = 'string'
8. method:Canvas.setContents, attrType='HTMLString', setter Type = 'string'
9. method:Canvas.setEdgeOpacity, attrType='int', setter Type = 'number'
10. method:Canvas.setHeight, attrType='Number or String', setter Type = 'number'
11. method:Canvas.setHtmlElement, attrType='DOMElement', setter Type = 'DOM element'
12. method:Canvas.setLeft, attrType='Number or String', setter Type = 'number'
13. method:Canvas.setTop, attrType='Number or String', setter Type = 'number'
14. method:Canvas.setValuesManager, attrType='ValuesManager', setter Type = 'dataPath'
15. method:Canvas.setWidth, attrType='Number or String', setter Type = 'number'
16. method:CanvasItem.setCanvas, attrType='AutoChild Canvas', setter Type = 'Canvas'
17. method:DateItem.setEndDate, attrType='Date', setter Type = 'LogicalDate | String'
18. method:DateItem.setStartDate, attrType='Date', setter Type = 'LogicalDate | String'
19. method:DateRangeItem.setFromDate, attrType='Date or RelativeDateString or TimeUnit', setter Type = 'Date'
20. method:DateRangeItem.setToDate, attrType='Date or RelativeDateString or TimeUnit', setter Type = 'Date'
21. method:Deck.setCurrentPane, attrType='Canvas', setter Type = 'identifier | Canvas'
22. method:DetailViewer.setData, attrType='Array[] of DetailViewerRecord | Array[] of Record | RecordList', setter Type = 'object or array'
23. method:Dialog.setButtons, attrType='Array of Button or Button Properties', setter Type = 'array of Buttons'
24. method:Dialog.setToolbarButtons, attrType='Array of Button or Button Properties', setter Type = 'array of Buttons'
25. method:DrawItem.setFillGradient, attrType='Gradient | string', setter Type = 'Gradient'
26. method:DrawPane.setRotation, attrType='float', setter Type = 'double'
27. method:DynamicForm.setAction, attrType='string', setter Type = 'URL'
28. method:DynamicForm.setValuesManager, attrType='ValuesManager instance or global ID', setter Type = 'ValuesManager'
29. method:FilterBuilder.setTopOperator, attrType='LogicalOperator', setter Type = 'OperatiorId'
30. method:FormItem.setOptionDataSource, attrType='DataSource | String', setter Type = 'DataSource'
31. method:HTMLFlow.setContents, attrType='HTMLString', setter Type = 'string'
32. method:Img.setSrc, attrType='SCImgURL', setter Type = 'URL'
33. method:ImgButton.setIcon, attrType='SCImgURL', setter Type = 'URL'
34. method:ImgButton.setIconOrientation, attrType='string', setter Type = '"left" or "right"'
35. method:ImgSectionHeader.setIcon, attrType='SCImgURL', setter Type = 'URL'
36. method:Label.setContents, attrType='HTMLString', setter Type = 'string'
37. method:Label.setIcon, attrType='SCImgURL', setter Type = 'URL'
38. method:Label.setIconOrientation, attrType='string', setter Type = '"left" or "right"'
39. method:Layout.setLayoutMargin, attrType='integer', setter Type = 'int'
40. method:ListGrid.setAutoFitData, attrType='Autofit', setter Type = 'string'
41. method:ListGrid.setAutoFitExtraRecords, attrType='number', setter Type = 'integer'
42. method:ListGrid.setAutoFitMaxColumns, attrType='number', setter Type = 'integer'
43. method:ListGrid.setAutoFitMaxHeight, attrType='number', setter Type = 'integer'
44. method:ListGrid.setAutoFitMaxRecords, attrType='number', setter Type = 'integer'
45. method:ListGrid.setFieldState, attrType='String', setter Type = 'ListGridFieldState'
46. method:ListGrid.setMinFieldWidth, attrType='int', setter Type = 'Number'
47. method:ListGrid.setSelectionAppearance, attrType='SelectionAppearance', setter Type = 'String'
48. method:ListGrid.setViewState, attrType='String', setter Type = 'ListGridViewState'
49. method:Menu.setData, attrType='Array of MenuItem | Array[] of Record | Tree | RecordList', setter Type = 'array of MenuItems'
50. method:Menu.setItems, attrType='Array of MenuItem', setter Type = 'array of MenuItems'
51. method:MenuBar.setMenus, attrType='Array of Menu', setter Type = 'array'
52. method:PickTreeItem.setEmptyDisplayValue, attrType='HTMLString', setter Type = 'string'
53. method:Portlet.setHeight, attrType='Number or String', setter Type = 'number'
54. method:Portlet.setRowHeight, attrType='Number or String', setter Type = 'number'
55. method:Progressbar.setLength, attrType='Number or String', setter Type = 'number'
56. method:Slider.setLabelHeight, attrType='int', setter Type = 'number'
57. method:Slider.setLabelSpacing, attrType='int', setter Type = 'number'
58. method:Slider.setLabelWidth, attrType='int', setter Type = 'number'
59. method:Slider.setNumValues, attrType='integer', setter Type = 'float'
60. method:Slider.setRoundPrecision, attrType='int', setter Type = 'number'
61. method:Slider.setStepPercent, attrType='float', setter Type = 'number'
62. method:Slider.setThumbThickWidth, attrType='int', setter Type = 'number'
63. method:Slider.setThumbThinWidth, attrType='int', setter Type = 'number'
64. method:Slider.setTrackCapSize, attrType='int', setter Type = 'number'
65. method:Slider.setTrackImageType, attrType='ImageStyle', setter Type = 'string'
66. method:Slider.setTrackWidth, attrType='int', setter Type = 'number'
67. method:SliderItem.setNumValues, attrType='integer', setter Type = 'float'
68. method:StatefulCanvas.setIcon, attrType='SCImgURL', setter Type = 'URL'
69. method:StatefulCanvas.setIconOrientation, attrType='string', setter Type = '"left" or "right"'
70. method:StretchImg.setSrc, attrType='SCImgURL', setter Type = 'URL'
71. method:StretchImgButton.setIcon, attrType='SCImgURL', setter Type = 'URL'
72. method:StretchImgButton.setIconOrientation, attrType='string', setter Type = '"left" or "right"'
73. method:TileLayout.setTileHeight, attrType='int', setter Type = 'Integer'
74. method:TileLayout.setTileHMargin, attrType='int', setter Type = 'Integer'
75. method:TileLayout.setTileMargin, attrType='int', setter Type = 'Integer'
76. method:TileLayout.setTileSize, attrType='int', setter Type = 'Integer'
77. method:TileLayout.setTilesPerLine, attrType='int', setter Type = 'Integer'
78. method:TileLayout.setTileVMargin, attrType='int', setter Type = 'Integer'
79. method:TileLayout.setTileWidth, attrType='int', setter Type = 'Integer'
80. method:Toolbar.setButtons, attrType='array', setter Type = 'Array of Button Properties'
81. method:ToolStripGroup.setControls, attrType='Array of Widget', setter Type = 'Array of Canvas'
82. method:ToolStripGroup.setTitleHeight, attrType='Number', setter Type = 'Integer'
83. method:ValuesManager.setDataSource, attrType='DataSource | String', setter Type = 'string | DataSource'

Getter Methods with return type that does not match the attribute type: 15
1. method:Canvas.getContents, attrType='HTMLString', return Type = 'HTML'
2. method:CubeGrid.getRollupValue, attrType='string', return Type = 'facetValue'
3. method:DataBoundComponent.getHilites, attrType='Array of Hilite', return Type = 'Array'
4. method:DataSource.getCacheData, attrType='Array of Record', return Type = 'Array of Records'
5. method:DynamicForm.getErrors, attrType='array', return Type = 'object'
6. method:FormItem.getLeft, attrType='int', return Type = 'integer'
7. method:FormItem.getTitle, attrType='String', return Type = 'HTMLString'
8. method:FormItem.getTop, attrType='int', return Type = 'integer'
9. method:FormulaBuilder.getTestRecord, attrType='Record', return Type = 'Object'
10. method:ListGrid.getFieldState, attrType='String', return Type = 'ListGridFieldState'
11. method:ListGrid.getViewState, attrType='String', return Type = 'ListGridViewState'
12. method:PortalLayout.getNumColumns, attrType='int', return Type = 'Integer'
13. method:SectionStack.getSections, attrType='Array of SectionStackSection Properties', return Type = 'List'
14. method:TabSet.getSelectedTab, attrType='number', return Type = 'Tab'
15. method:ValuesManager.getMembers, attrType='Array of DynamicForm', return Type = 'array'

Methods with non-optional params with the word 'optional' in the description: 19. Parameters listed here (may be more than one parameter per method)
1. classMethod:Time.setShortDisplayFormat, ParamType= TimeDisplayFormat | FormatString | function, ParamName=formatter, ParamDesc=Optional custom  formatter to use. Will accept a function (which will be passed a pointer to the&#010  Date to format), a format string, or a string designating a standard formatter
2. method:Date.toNormalDate, ParamType= DateDisplayFormat, ParamName=format, ParamDesc=Optional Format for the date returned
3. classMethod:Messaging.subscribe, ParamType= String, ParamName=selector, ParamDesc=JMS selector used with Queues to filter the messages that arrive  to the channel (optional).
4. method:DataSource.renameFile, ParamType= FileSpec | String, ParamName=oldFileSpec, ParamDesc=Either a FileSpec, or a String which                 will be parsed to determine the fileName, fileType and fileFormat&#010                 of the file to rename.&#010                 For instance, "employees.ds.xml" would be parsed as&#010                 {fileName: "employees", fileType: "ds", fileFormat: "xml"}.&#010                 Depending on the configuration of the DataSource, the fileType and fileFormat&#010                 may be optional.
5. method:ListGrid.setDataSource, ParamType= Array of Fields, ParamName=fields, ParamDesc=optional array of fields to use
6. method:DataBoundComponent.setDataSource, ParamType= Array of Fields, ParamName=fields, ParamDesc=optional array of fields to use
7. method:Date.toShortDate, ParamType= DateDisplayFormat, ParamName=format, ParamDesc=Optional Format for the date returned
8. classMethod:Time.setNormalDisplayFormat, ParamType= TimeDisplayFormat | FormatString | function, ParamName=formatter, ParamDesc=Optional custom  formatter to use. Will accept a function (which will be passed a pointer to the&#010  Date to format), a format string, or a string designating a standard formatter
9. method:Date.toNormalDatetime, ParamType= DateDisplayFormat, ParamName=format, ParamDesc=Optional Format for the date returned
10. method:DataSource.exportClientData, ParamType= DSCallback, ParamName=callback, ParamDesc=Optional callback.  Note that this is only applicable  if you also specify ${isc.DocUtils.linkForRef('attr:DSRequest.exportToClient','exportToClient')}: false in the &#010 request properties
11. method:DataSource.removeFile, ParamType= FileSpec | String, ParamName=fileSpec, ParamDesc=Either a FileSpec, or a String which                 will be parsed to determine the fileName, fileType and fileFormat.&#010                 For instance, "employees.ds.xml" would be parsed as&#010                 {fileName: "employees", fileType: "ds", fileFormat: "xml"}.&#010                 Depending the configuration of the DataSource, the fileType&#010                 and fileFormat may be optional.
12. method:Class.evaluate, ParamType= object, ParamName=evalArgs, ParamDesc=Optional mapping of argument names to values - each key will      be available as a local variable when the script is executed.
13. method:CubeGrid.hiliteCell, ParamType= string, ParamName=[], ParamDesc=optional third parameter - hilite ID.
14. classMethod:DataSource.getFieldValue, ParamType= dataPath, ParamName=, ParamDesc=(String) Optionally, a string expressing the dataPath to use for value lookup.                            If null, the dataPath from the field will be used
15. classMethod:DataSource.getFieldValue, ParamType= component, ParamName=, ParamDesc=(Canvas) Optionally, a component to prvide extra context for the dataPath                             search.  This is typically required if the dataPath traverses a list
16. classMethod:DataSource.getFieldValue, ParamType= reason, ParamName=, ParamDesc=(String) An optional reason for the get request, to be passed into                                   any ${isc.DocUtils.linkForRef('method:SimpleType.getAtomicValue')} method - see that&#010                                   API for details
17. method:DataSource.saveFile, ParamType= FileSpec | String, ParamName=fileSpec, ParamDesc=Either a FileSpec, or a String which                 will be parsed to determine the fileName, fileType and fileFormat.&#010                 For instance, "employees.ds.xml" would be parsed as&#010                 {fileName: "employees", fileType: "ds", fileFormat: "xml"}.&#010                 Depending on the configuration of the DataSource, the fileType&#010                 and fileFormat may be optional.
18. classMethod:DataSource.exportClientData, ParamType= DSCallback, ParamName=callback, ParamDesc=Optional callback.  Note that this is only applicable  if you also specify ${isc.DocUtils.linkForRef('attr:DSRequest.exportToClient','exportToClient')}: false in the &#010 request properties
19. classMethod:Class.evaluate, ParamType= object, ParamName=evalArgs, ParamDesc=Optional mapping of argument names to values - each key will      be available as a local variable when the script is executed.
20. classMethod:DataSource.saveValueViaDataPath, ParamType= String, ParamName=reason, ParamDesc=An optional reason for the get request, to be passed into                                   any ${isc.DocUtils.linkForRef('method:SimpleType.updateAtomicValue')} method - see that&#010                                   API for details
21. method:Date.toShortDateTime, ParamType= DateDisplayFormat, ParamName=format, ParamDesc=Optional Format for the date returned

Methods with optional params with the word 'optional' in the description: 156. Parameters listed here (may be more than one parameter per method)
1. classMethod:Canvas.getSnapPosition, ParamType= String, ParamName=snapEdge, ParamDesc=optional edge to snapTo. Default is the <b>opposite</b> edge or corner from  <code>snapTo</code>
2. method:DataBoundComponent.transferRecords, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has completed
3. method:List.addList, ParamType= number, ParamName=listStartRow, ParamDesc=optional start index in list
4. method:List.addList, ParamType= number, ParamName=listEndRow, ParamDesc=optional end index in list (non-inclusive)
5. method:DataSource.updateCaches, ParamType= DSRequest, ParamName=dsRequest, ParamDesc=optional dsRequest.  If not specified, a DSRequest will be                                automatically created based on the DataSource and operationType of&#010                                the DSResponse
6. classMethod:Canvas.showPrintPreview, ParamType= String, ParamName=separator, ParamDesc=Optional HTML separator to render between each component's printable                      HTML
7. method:Canvas.animateResize, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional acceleration effect to apply to the resize
8. classMethod:Canvas.getPrintHTML, ParamType= HTML, ParamName=separator, ParamDesc=Optional HTML separator to render between each component's printable HTML
9. method:String.endsWith, ParamType= int, ParamName=position, ParamDesc=optional position in this string. Defaults to the length of this string.
10. method:Array.contains, ParamType= number, ParamName=pos, ParamDesc=optional position in the list to look after
11. method:Canvas.animateScroll, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional acceleration to bias the animation ratios
12. method:TileGrid.filterData, ParamType= DSRequest, ParamName=requestProperties, ParamDesc=for databound components only - optional                            additional properties to set on the DSRequest that will be issued
13. classMethod:Log.setDefaultPriority, ParamType= Class or Instance object, ParamName=object, ParamDesc=Optional ISC class or instance - if passed the default priority will be set for logging &#010      occurring on the class or instance only.
14. classMethod:isc.defineClass, ParamType= Class, ParamName=superClass, ParamDesc=Optional SuperClass Class object or name
15. method:Tree.openFolder, ParamType= callback, ParamName=callback, ParamDesc=Optional callback (stringMethod) to fire when loading                       completes. Has a single param <code>node</code> - the node whose &#010                      children have been loaded, and is fired in the scope of the Tree.
16. method:Layout.setLayoutMargin, ParamType= int, ParamName=newMargin, ParamDesc=optional new setting for layout.layoutMargin.  Regardless of whether a new                          layout margin is passed, the layout reflows according to the current settings&#010                          for layoutStartMargin et al
17. classMethod:Time.toShortTime, ParamType= TimeDisplayFormat | FormatString | function, ParamName=formatter, ParamDesc=Optional custom  formatter to use. Will accept a function (which will be passed a pointer to the&#010  Date to format), a format string, or a string designating a standard formatter
18. classMethod:Canvas.getPrintPreview, ParamType= String, ParamName=separator, ParamDesc=optional string of HTML to render between each component
19. method:Canvas.linkHTML, ParamType= string, ParamName=ID, ParamDesc=optional ID for the link element to be written out
20. method:Canvas.linkHTML, ParamType= Integer, ParamName=tabIndex, ParamDesc=optional tabIndex for the link
21. method:Canvas.linkHTML, ParamType= string, ParamName=accessKey, ParamDesc=optional accessKey for the link
22. method:WebService.getFetchDS, ParamType= OperationBinding Properties, ParamName=operationBindingProperties, ParamDesc=Optional additional properties for the operationType:"fetch" &#010 ${isc.DocUtils.linkForRef('class:OperationBinding','operationBinding')} which this method automatically creates.  This&#010 can be used to set properties such as ${isc.DocUtils.linkForRef('attr:OperationBinding.useFlatFields')} or&#010 ${isc.DocUtils.linkForRef('attr:OperationBinding.recordXPath')}
23. method:ColumnTree.getRecord, ParamType= Integer, ParamName=colNum, ParamDesc=optional index of the column
24. method:ListGrid.saveAllEdits, ParamType= Array of Number, ParamName=rows, ParamDesc=optionally specify which rows to save
25. method:Array.sum, ParamType= number, ParamName=start, ParamDesc=optional start index (default is 0)
26. method:Array.sum, ParamType= number, ParamName=end, ParamDesc=optional end index (default is list.length)
27. classMethod:FileLoader.cacheISC, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when all specified modules and                                      skin have been cached.
28. classMethod:isc.say, ParamType= Callback, ParamName=callback, ParamDesc=Optional Callback to fire when the user                                      dismisses the dialog. This has the single parameter&#010                                      'value', indicating the value returned by the Warn&#010                                      dialog from 'okClick()' etc.
29. method:ListGrid.exportClientData, ParamType= RPCCallback, ParamName=callback, ParamDesc=Optional callback.  If  you specify ${isc.DocUtils.linkForRef('attr:DSRequest.exportToClient','exportToClient')}: false in the request&#010  properties, this callback will fire after export completes.  Otherwise the callback will&#010  fire right before the download request is made to the server.
30. classMethod:Canvas.resizeFonts, ParamType= String, ParamName=styleSheets, ParamDesc=optional regular expression pattern for matching stylesheets
31. classMethod:Canvas.resizeFonts, ParamType= Boolean, ParamName=resizeIcons, ParamDesc=If true, this method will also cause icons registered    with policy <code>"fonts"</code> to be ${isc.DocUtils.linkForRef('classMethod:Canvas.resizeIcons','resized')}. &#010    This is an optional parameter,&#010    if omitted, icons will be resized if ${isc.DocUtils.linkForRef('classMethod:Canvas.setAutoResizeIcons','autoResizeIcons')}&#010    is true.
32. classMethod:ClassFactory.defineClass, ParamType= Class, ParamName=superClass, ParamDesc=Optional SuperClass Class object or name
33. method:Canvas.getImgURL, ParamType= string, ParamName=imgDir, ParamDesc=optional image directory to override the default for this Canvas
34. method:DataSource.viewFile, ParamType= String, ParamName=fieldName, ParamDesc=optional name of the binary field containing the                                         file.  If not provided, the first binary field&#010                                         is used
35. method:String.startsWith, ParamType= int, ParamName=position, ParamDesc=optional position in this string. Defaults to 0.
36. method:FormItem.redraw, ParamType= String, ParamName=reason, ParamDesc=optional reason for performing the redraw, which may appear in                          diagnostic logs if enabled
37. method:DynamicForm.getSaveOperationType, ParamType= DSRequest Properties, ParamName=requestProperties, ParamDesc=Optional DSRequest config block for the  save operation
38. classMethod:FileLoader.loadModules, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified                                      modules has completed loading.
39. method:Canvas.clickMaskUp, ParamType= string, ParamName=ID, ParamDesc=optional ID of specific clickMask to check. If not passed,                      checks for the click mask associated with this widget only.
40. classMethod:DateUtil.parseInput, ParamType= Boolean, ParamName=suppressConversion, ParamDesc=If the string passed in was not a valid date, in some cases we can convert to a&#010          valid date (for example incrementing the year if the month is greater than 12).&#010          This optional parameter will suppress such conversions - anything that doesn't&#010          parse directly to a valid date will simply return null.
41. method:SplitPane.showDetailPane, ParamType= HTMLString, ParamName=detailPaneTitle, ParamDesc=optional new ${isc.DocUtils.linkForRef('attr:SplitPane.detailTitle','detail title')}.
42. method:SplitPane.showDetailPane, ParamType= HTMLString, ParamName=backButtonTitle, ParamDesc=optional new title for the ${isc.DocUtils.linkForRef('attr:SplitPane.backButton','back button')}.
43. method:TreeGrid.getEventRow, ParamType= Integer, ParamName=y, ParamDesc=optional y-coordinate to obtain row number, in lieu of the y                        coordinate of the last mouse event
44. method:ListGrid.getEventColumn, ParamType= Integer, ParamName=x, ParamDesc=optional x-coordinate to obtain column number for, in lieu of the x                        coordinate of the last mouse event
45. method:DataSource.fieldMatchesFilter, ParamType= DSRequest Properties, ParamName=requestProperties, ParamDesc=optional dataSource request properties
46. method:DataBoundComponent.transferSelectedData, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has                        completed.  The callback will be passed a single parameter "records",&#010                       the list of records actually transferred to this component.
47. classMethod:RPCManager.exportImage, ParamType= ExportImageCallback, ParamName=callback, ParamDesc=optional callback when using                                          <code>exportDisplay</code>:"return".  <b>Does not&#010                                         fire</b> for other <code>exportDisplay</code> modes
48. classMethod:WebService.getByName, ParamType= String, ParamName=serviceNamespace, ParamDesc=optional serviceNamespace if needed to disambiguate
49. method:GridRenderer.getEventColumn, ParamType= Integer, ParamName=x, ParamDesc=optional x-coordinate to obtain column number for, in lieu of the x                        coordinate of the last mouse event
50. classMethod:JSON.encode, ParamType= JSONEncoder Properties, ParamName=settings, ParamDesc=optional settings for encoding
51. method:TreeGrid.exportClientData, ParamType= RPCCallback, ParamName=callback, ParamDesc=Optional callback.  If  you specify ${isc.DocUtils.linkForRef('attr:DSRequest.exportToClient','exportToClient')}: false in the request&#010  properties, this callback will fire after export completes.  Otherwise the callback will&#010  fire right before the download request is made to the server.
52. method:FormItem.getDisplayValue, ParamType= , ParamName=value, ParamDesc=optional stored value to be mapped to a display value.  Default is to                use the form's current value
53. method:CubeGrid.exportClientData, ParamType= RPCCallback, ParamName=callback, ParamDesc=Optional callback.  If  you specify ${isc.DocUtils.linkForRef('attr:DSRequest.exportToClient','exportToClient')}: false in the request&#010  properties, this callback will fire after export completes.  Otherwise the callback will&#010  fire right before the download request is made to the server.
54. method:Array.and, ParamType= number, ParamName=start, ParamDesc=optional start index (default is 0)
55. method:Array.and, ParamType= number, ParamName=end, ParamDesc=optional end index (default is list.length)
56. classMethod:FileLoader.loadISC, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when all specified modules and                                      skin have loaded.
57. method:Canvas.hideClickMask, ParamType= string, ParamName=ID, ParamDesc=optional ID of specific clickMask to hide. If not passed,                      defaults to hiding the click mask associated with this widget only.
58. method:TreeGrid.transferNodes, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has                       completed.  The callback will be passed a single parameter "records",&#010                       the list of nodes actually transferred to this component (it is called&#010                       "records" because this is logic shared with ${isc.DocUtils.linkForRef('class:ListGrid')})
59. method:SplitPane.navigatePane, ParamType= HTMLString, ParamName=title, ParamDesc=optional title to use for target pane. If not specified, the title is based on ${isc.DocUtils.linkForRef('attr:SplitPane.listPaneTitleTemplate')} if the target pane is the <code>listPane</code>,&#010 otherwise ${isc.DocUtils.linkForRef('attr:SplitPane.detailPaneTitleTemplate')}.
60. method:StretchImgButton.removeFromRadioGroup, ParamType= string, ParamName=groupID, ParamDesc=- optional radio group ID (to ensure the widget is removed                                        from the appropriate group.
61. method:StatefulCanvas.removeFromRadioGroup, ParamType= string, ParamName=groupID, ParamDesc=- optional radio group ID (to ensure the widget is removed                                        from the appropriate group.
62. method:ListGrid.displayHeaderContextMenu, ParamType= Array, ParamName=position, ParamDesc=Optional 2-element array specifying position at which the menu should                           be shown. If this is not passed in the menu will be shown at the&#010                           mouseEvent position (default context menu behavior).
63. method:ListGrid.transferSelectedData, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has                        completed.  The callback will be passed a single parameter "records",&#010                       the list of records actually transferred to this component.
64. method:ListGrid.recalculateSummaries, ParamType= Array of Record, ParamName=records, ParamDesc=Optional array of records to recalculate summaries for,                  or null for all records
65. method:ListGrid.recalculateSummaries, ParamType= Array of ListGridField, ParamName=fields, ParamDesc=Optional array of fields to recalculate summaries                 for, or null for all fields&#010 <P>&#010 Note that the records should be from ${isc.DocUtils.linkForRef('attr:ListGrid.data')}; thus, if the grid is grouped,&#010  the records should be from the grouped data rather than ${isc.DocUtils.linkForRef('attr:ListGrid.originalData')}.
66. method:Calendar.getSublaneFromPoint, ParamType= Integer, ParamName=x, ParamDesc=optional x offset into the body of the selected view
67. method:Calendar.getSublaneFromPoint, ParamType= Integer, ParamName=y, ParamDesc=optional y offset into the body of the selected view. If this param and "x" are                             both unset, assumes both offsets from the last mouse event.
68. method:Button.removeFromRadioGroup, ParamType= string, ParamName=groupID, ParamDesc=- optional radio group ID (to ensure the widget is removed                                        from the appropriate group.
69. classMethod:TabIndexManager.shiftFocusWithinGroup, ParamType= String, ParamName=currentTarget, ParamDesc=Optional ID of current focus target within the group   focus will be shifted in the specified direction from this node.
70. method:Array.addList, ParamType= number, ParamName=listStartRow, ParamDesc=optional start index in list
71. method:Array.addList, ParamType= number, ParamName=listEndRow, ParamDesc=optional end index in list (non-inclusive)
72. classMethod:FileLoader.cacheShadows, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified URLs                                      has completed caching.
73. method:ListGrid.getRecordComponent, ParamType= integer, ParamName=colNum, ParamDesc=optional column number to get the record component for
74. method:Canvas.animateMove, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional acceleration effect to bias the ratios
75. classMethod:Log.getPriority, ParamType= Class or Instance object, ParamName=object, ParamDesc=Optional class or instance to check for                                               specific log priority overrides
76. method:CubeGrid.saveEdits, ParamType= EditCompletionEvent, ParamName=editCompletionEvent, ParamDesc=Event used to complete cell editing.          Optional, and defaults to <code>"programmatic"</code>.  Can be used by the &#010          <code>callback</code> method to perform custom actions such as navigation when the &#010          save completes.
77. method:FilterBuilder.getCriteria, ParamType= boolean, ParamName=includeEmptyValues, ParamDesc=By default if a user has selected a field and operator   type, but has failed to enter a value for the field it will be skipped. This optional parameter&#010   allows you to retrieve all criteria, including those with an empty <code>value</code> attribute.
78. method:ListGrid.chartRow, ParamType= Array of String, ParamName=dataFields, ParamDesc=optional list of fields to use as labels.  By      default, all fields are used.
79. method:Selection.selectRange, ParamType= boolean, ParamName=newState, ParamDesc=optional new selection state to set.  True means                                      selected, false means unselected.  Defaults to true.
80. method:ListGrid.getEventRow, ParamType= Integer, ParamName=y, ParamDesc=optional y-coordinate to obtain row number, in lieu of the y                        coordinate of the last mouse event
81. method:TreeGrid.folderDrop, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has                        completed.  The callback will be passed a single parameter "records",&#010                       the list of nodes actually transferred to this component (it is called&#010                       "records" because this is logic shared with ${isc.DocUtils.linkForRef('class:ListGrid')})
82. method:DataSource.recordsFromText, ParamType= TextImportSettings Properties, ParamName=settings, ParamDesc=optional settings for the import
83. method:Tree.loadChildren, ParamType= DSCallback, ParamName=callback, ParamDesc=Optional callback (stringMethod) to fire when loading                       completes. Has a single param <code>node</code> - the node whose &#010                      children have been loaded, and is fired in the scope of the Tree.
84. method:ListGrid.saveEdits, ParamType= EditCompletionEvent, ParamName=editCompletionEvent, ParamDesc=Event used to complete cell editing.          Optional, and defaults to <code>"programmatic"</code>.  Can be used by the&#010          <code>callback</code> method to perform custom actions such as navigation when the&#010          save completes.
85. method:ListGrid.chartData, ParamType= Array of String, ParamName=dataFields, ParamDesc=optional list of fields to use as labels.  By      default, all fields are used.
86. method:ListGrid.setUserSummary, ParamType= UserSummary, ParamName=userSummary, ParamDesc=optional summary to install
87. classMethod:Canvas.resizeControls, ParamType= Boolean, ParamName=resizeIcons, ParamDesc=If true, this method will also cause icons registered    with policy <code>"controls"</code> to be ${isc.DocUtils.linkForRef('classMethod:Canvas.resizeIcons','resized')}. &#010    This is an optional parameter,&#010    if omitted, icons will be resized if ${isc.DocUtils.linkForRef('classMethod:Canvas.setAutoResizeIcons','autoResizeIcons')}&#010    is true.
88. method:TreeGrid.filterData, ParamType= DSRequest, ParamName=requestProperties, ParamDesc=for databound components only - optional                            additional properties to set on the DSRequest that will be issued
89. method:Canvas.animateHide, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional acceleration effect function to bias   the animation ratios.  If unset, acceleration will be picked up from&#010   ${isc.DocUtils.linkForRef('attr:Canvas.animateShowTime')}
90. method:ListGrid.scrollToColumn, ParamType= Alignment, ParamName=xPosition, ParamDesc=Horizontal position of scrolled column (optional)
91. method:Canvas.getPrintHTML, ParamType= Callback, ParamName=callback, ParamDesc=optional callback. This is required to handle cases where HTML                  generation is asynchronous - if a method generates HTML asynchronously, it should return&#010                  null, and fire the specified callback on completion of HTML generation. The&#010                  first parameter <code>HTML</code> should contain the generated print HTML.&#010                  The callback is only called if null is returned. Furthermore, the default&#010                  getPrintHTML() implementation always returns null and fires the callback&#010                  when a callback is provided.
92. method:ColumnTree.filterData, ParamType= DSRequest, ParamName=requestProperties, ParamDesc=for databound components only - optional                            additional properties to set on the DSRequest that will be issued
93. classMethod:FileLoader.cacheStretchImgStates, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified URLs                                      has completed caching.
94. method:CubeGrid.getEventRow, ParamType= Integer, ParamName=y, ParamDesc=optional y-coordinate to obtain row number, in lieu of the y                        coordinate of the last mouse event
95. method:Canvas.animateShow, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional acceleration effect function to    bias the animation ratios.  If unset, acceleration will be picked up from&#010   ${isc.DocUtils.linkForRef('attr:Canvas.animateShowAcceleration')}
96. method:EditPane.addFromPaletteNode, ParamType= EditNode, ParamName=parentNode, ParamDesc=optional the parent node if the new node should appear                                under a specific parent
97. method:Canvas.animateFade, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional animation acceleration to bias the ratios
98. method:DataSource.applyFilter, ParamType= DSRequest Properties, ParamName=requestProperties, ParamDesc=optional dataSource request properties
99. method:Calendar.showEventEditor, ParamType= Boolean, ParamName=isNewEvent, ParamDesc=optional boolean indicating that this is a new event, even if                               an event is passed - used to pass defaults for a new event
100. classMethod:FileLoader.cacheFiles, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified                                      files has been cached.
101. method:ListGrid.filterData, ParamType= DSRequest, ParamName=requestProperties, ParamDesc=for databound components only - optional                            additional properties to set on the DSRequest that will be issued
102. method:SchemaSet.getSchema, ParamType= String, ParamName=schemaType, ParamDesc=optional type of schema to return, either "element" for                              xs:element definitions only or "type" for xs:complexType&#010                              definitions.  If unspecified, either will be returned,&#010                              with types preferred if names collide
103. classMethod:FileLoader.cacheImgStates, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified URLs                                      has completed caching.
104. classMethod:RPCManager.cacheScreens, ParamType= RPCRequest Properties, ParamName=requestProperties, ParamDesc=optional properties for the request
105. method:DrawPane.getPrintHTML, ParamType= Callback, ParamName=callback, ParamDesc=optional callback. This is required to handle cases where HTML                  generation is asynchronous - if a method generates HTML asynchronously, it should return&#010                  null, and fire the specified callback on completion of HTML generation. The&#010                  first parameter <code>HTML</code> should contain the generated print HTML.&#010                  The callback is only called if null is returned. Furthermore, the default&#010                  getPrintHTML() implementation always returns null and fires the callback&#010                  when a callback is provided.
106. method:GridRenderer.getEventRow, ParamType= Integer, ParamName=y, ParamDesc=optional y-coordinate to obtain row number, in lieu of the y                        coordinate of the last mouse event
107. method:Tree.getAllNodes, ParamType= , ParamName=node, ParamDesc=optional node to start from.  Default is root.
108. classMethod:RPCManager.loadScreen, ParamType= RPCRequest Properties, ParamName=requestProperties, ParamDesc=optional properties for the request
109. method:ListGrid.setUserFormulaText, ParamType= String, ParamName=text, ParamDesc=optional formula text to install
110. method:EditTree.addFromPaletteNode, ParamType= EditNode, ParamName=parentNode, ParamDesc=optional the parent node if the new node should appear                                under a specific parent
111. method:ListGrid.scrollToRow, ParamType= VerticalAlignment, ParamName=yPosition, ParamDesc=Vertical position of scrolled row (optional)
112. method:Array.max, ParamType= number, ParamName=start, ParamDesc=optional start index (default is 0)
113. method:Array.max, ParamType= number, ParamName=end, ParamDesc=optional end index (default is list.length)
114. method:EventCanvas.setEvent, ParamType= CSSStyleName, ParamName=styleName, ParamDesc=optional CSS class to apply to this EventCanvas
115. method:EventCanvas.setEvent, ParamType= CSSStyleName, ParamName=headerStyle, ParamDesc=optional separate CSS class to apply to the                                      ${isc.DocUtils.linkForRef('attr:EventCanvas.showHeader','header')}.
116. method:EventCanvas.setEvent, ParamType= CSSStyleName, ParamName=bodyStyle, ParamDesc=optional separate CSS class to apply to the                                      ${isc.DocUtils.linkForRef('attr:EventCanvas.showBody','body')}.
117. classMethod:FileLoader.loadJSFiles, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified URLs                                      has completed loading.
118. method:Canvas.setImage, ParamType= string, ParamName=imgDir, ParamDesc=optional image directory, overrides the default for this Canvas
119. method:ListGrid.setUserSummaryText, ParamType= String, ParamName=text, ParamDesc=optional summary text to install
120. method:DataSource.getFileURL, ParamType= String, ParamName=fieldName, ParamDesc=optional name of the binary field containing the                                         file.  If not provided, the first binary field&#010                                         is used
121. method:ValuesManager.getValue, ParamType= Canvas, ParamName=component, ParamDesc=Optional, the component for which we are trying to                                  retrieve a value.  This is used to identify which of&#010                                  the potential records to use when the ValuesManager&#010                                  is managing a complex structure involving nested Lists
122. method:List.contains, ParamType= number, ParamName=pos, ParamDesc=optional position in the list to look after
123. method:Calendar.getDateLabelText, ParamType= Date, ParamName=endDate, ParamDesc=the optional end of the visible date range
124. method:Array.or, ParamType= number, ParamName=start, ParamDesc=optional start index (default is 0)
125. method:Array.or, ParamType= number, ParamName=end, ParamDesc=optional end index (default is list.length)
126. method:DetailViewer.exportClientData, ParamType= RPCCallback, ParamName=callback, ParamDesc=Optional callback.  If  you specify ${isc.DocUtils.linkForRef('attr:DSRequest.exportToClient','exportToClient')}: false in the request&#010  properties, this callback will fire after export completes.  Otherwise the callback will&#010  fire right before the download request is made to the server.
127. classMethod:DateUtil.getAbsoluteDate, ParamType= RelativeDateRangePosition, ParamName=rangePosition, ParamDesc=optional date-range position. Only has an effect   if the date passed in is a ${isc.DocUtils.linkForRef('type:RelativeDateShortcut')} where the range position &#010   is not implicit, such as "$yesterday"
128. classMethod:isc.warn, ParamType= Callback, ParamName=callback, ParamDesc=Optional Callback to fire when the user                                      dismisses the dialog. This has the single parameter&#010                                      'value', indicating the value returned by the Warn&#010                                      dialog from 'okClick()' etc.
129. method:ToolStripGroup.addControl, ParamType= Integer, ParamName=index, ParamDesc=optional insertion index for this control
130. method:FacetChart.getPrintHTML, ParamType= Callback, ParamName=callback, ParamDesc=optional callback. This is required to handle cases where HTML                  generation is asynchronous - if a method generates HTML asynchronously, it should return&#010                  null, and fire the specified callback on completion of HTML generation. The&#010                  first parameter <code>HTML</code> should contain the generated print HTML.&#010                  The callback is only called if null is returned. Furthermore, the default&#010                  getPrintHTML() implementation always returns null and fires the callback&#010                  when a callback is provided.
131. method:TileGrid.transferSelectedData, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has                        completed.  The callback will be passed a single parameter "records",&#010                       the list of records actually transferred to this component.
132. classMethod:Page.setEvent, ParamType= string, ParamName=functionName, ParamDesc=optional - if an object was passed in as the second                                          parameter, this is a name of a method to call on that&#010                                          object.
133. method:SplitPane.navigateDetailPane, ParamType= HTMLString, ParamName=title, ParamDesc=optional title to use instead of the automatically chosen one
134. classMethod:FileLoader.loadLocale, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when all specified locale                                      has loaded.
135. classMethod:FileLoader.cacheLocale, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when all specified locale                                      has been cached..
136. classMethod:Page.waitForMultiple, ParamType= Number, ParamName=timeout, ParamDesc=Optional timeout period (in milliseconds). If you want a timeout,                           you must also provide a timeoutCallback
137. method:CubeGrid.getEventColumn, ParamType= Integer, ParamName=x, ParamDesc=optional x-coordinate to obtain column number for, in lieu of the x                        coordinate of the last mouse event
138. method:TreeGrid.startEditingNew, ParamType= object, ParamName=newValues, ParamDesc=Optional initial set of properties for the new record
139. method:DataSource.convertRelativeDates, ParamType= String, ParamName=timezoneOffset, ParamDesc=optional timezone offset.  Defaults to the current timezone
140. method:ListGrid.setUserFormula, ParamType= UserFormula, ParamName=userFormula, ParamDesc=optional formula to install
141. method:TreeGrid.transferSelectedData, ParamType= Callback, ParamName=callback, ParamDesc=optional callback to be fired when the transfer process has                        completed.  The callback will be passed a single parameter "records",&#010                       the list of nodes actually transferred to this component (it is called &#010                       "records" because this logic is shared with ${isc.DocUtils.linkForRef('class:ListGrid')}).
142. method:CubeGrid.getPrintHTML, ParamType= Callback, ParamName=callback, ParamDesc=optional callback. This is required to handle cases where HTML                  generation is asynchronous - if a method generates HTML asynchronously, it should return&#010                  null, and fire the specified callback on completion of HTML generation. The&#010                  first parameter <code>HTML</code> should contain the generated print HTML.&#010                  The callback is only called if null is returned. Furthermore, the default&#010                  getPrintHTML() implementation always returns null and fires the callback&#010                  when a callback is provided.
143. classMethod:FileLoader.cacheModules, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified                                      modules has been cached.
144. classMethod:Log.clearPriority, ParamType= Class or Instance object, ParamName=object, ParamDesc=Optional instance or class object - if passed                                        clear logging priority for the appropriate category&#010                                        on that object.
145. method:SplitPane.showListPane, ParamType= HTMLString, ParamName=listPaneTitle, ParamDesc=optional new list title.
146. method:SplitPane.showListPane, ParamType= HTMLString, ParamName=backButtonTitle, ParamDesc=optional new title for the ${isc.DocUtils.linkForRef('attr:SplitPane.backButton','back button')}.
147. method:ListGrid.startEditingNew, ParamType= Map | Record, ParamName=newValues, ParamDesc=Optional initial set of properties for the new record
148. method:ResultTree.loadChildren, ParamType= DSCallback, ParamName=callback, ParamDesc=Optional callback (stringMethod) to fire when loading                       completes. Has a single param <code>node</code> - the node whose &#010                      children have been loaded, and is fired in the scope of the Tree.
149. method:NavigationBar.setViewState, ParamType= NavigationDirection, ParamName=direction, ParamDesc=an optional direction for animation. If not specified or set to&#010 "none"&#010 &#010 then the state change will not be animated. The direction should be&#010 "forward"&#010 &#010 for operations that reveal new content and&#010 "back"&#010 &#010 for operations that reveal previously-displayed content.
150. method:EditProxy.startInlineEditing, ParamType= String, ParamName=appendChar, ParamDesc=optional String to append to current value as editing starts
151. classMethod:Time.toTime, ParamType= TimeDisplayFormat | FormatString | function, ParamName=formatter, ParamDesc=Optional custom  formatter to use. Will accept a function (which will be passed a pointer to the&#010  Date to format), a format string, or a string designating a standard formatter
152. method:WebService.setLocation, ParamType= String, ParamName=operation, ParamDesc=optional operation name to set the location for, for                             debugging only
153. method:DataSource.downloadFile, ParamType= String, ParamName=fieldName, ParamDesc=optional name of the binary field containing the                                         file.  If not provided, the first binary field&#010                                         is used
154. method:DataSource.getClientOnlyDataSource, ParamType= DSRequest Properties, ParamName=requestProperties, ParamDesc=optional properties to pass through to the DSRequest
155. method:DataSource.getClientOnlyDataSource, ParamType= DataSource Properties, ParamName=dataSourceProperties, ParamDesc=optional properties to pass                                                        through to the clientOnly DS
156. classMethod:Log.getDefaultPriority, ParamType= Class or Instance object, ParamName=object, ParamDesc=Optional ISC class or instance - if passed the returns the default priority for &#010     the class or instance only.
157. method:CubeGrid.saveAllEdits, ParamType= array of 2-element arrays, ParamName=cells, ParamDesc=optionally specify which cells to save. Each cell  should be specified as a 2 element array in the format <code>[rowNum,colNum]</code>.
158. method:ValuesManager.getSaveOperationType, ParamType= DSRequest Properties, ParamName=requestProperties, ParamDesc=Optional DSRequest config block for the  save operation
159. method:SplitPane.navigateListPane, ParamType= HTMLString, ParamName=title, ParamDesc=optional title to use instead of the automatically chosen one
160. method:Calendar.filterData, ParamType= DSRequest, ParamName=requestProperties, ParamDesc=for databound components only - optional                            additional properties to set on the DSRequest that will be issued
161. method:Canvas.animateRect, ParamType= AnimationAcceleration, ParamName=acceleration, ParamDesc=Optional acceleration effect to apply to the animation
162. method:Array.min, ParamType= number, ParamName=start, ParamDesc=optional start index (default is 0)
163. method:Array.min, ParamType= number, ParamName=end, ParamDesc=optional end index (default is list.length)
164. classMethod:FileLoader.cacheEdgeImages, ParamType= String or Function, ParamName=onload, ParamDesc=Optional code to execute when the last of the specified URLs                                      has completed caching.
165. classMethod:Page.waitFor, ParamType= Number, ParamName=timeout, ParamDesc=Optional timeout period (in milliseconds). If you want a timeout,                           you must also provide a timeoutCallback
166. method:Calendar.showEventDialog, ParamType= Boolean, ParamName=isNewEvent, ParamDesc=optional boolean indicating that this is a new event, event if                               an event is passed - used to pass defaults for a new event
167. classMethod:Log.setPriority, ParamType= Class or Instance object, ParamName=object, ParamDesc=Optional ISC class or instance - if passed the priority will be set for logging &#010      occurring on the class or instance only.
168. classMethod:Log.getLogPriorities, ParamType= Class or Instance object, ParamName=object, ParamDesc=Optional param to get priorities specific to                                            some ISC class or instance.
169. method:WebService.getSchema, ParamType= String, ParamName=schemaType, ParamDesc=optional type of schema to return, either "element" for                              xs:element definitions only or "type" for xs:complexType&#010                              definitions.  If unspecified, either will be returned,&#010                              with types preferred if names collide
170. classMethod:Date.parseInput, ParamType= Boolean, ParamName=suppressConversion, ParamDesc=If the string passed in was not a valid date, in some cases we can convert to a&#010          valid date (for example incrementing the year if the month is greater than 12).&#010          This optional parameter will suppress such conversions - anything that doesn't&#010          parse directly to a valid date will simply return null.
171. method:ListGrid.scrollToCell, ParamType= Alignment, ParamName=xPosition, ParamDesc=Horizontal position of scrolled cell (optional)
172. method:ListGrid.scrollToCell, ParamType= VerticalAlignment, ParamName=yPosition, ParamDesc=Vertical position of scrolled cell (optional)
173. method:EditContext.addFromPaletteNode, ParamType= EditNode, ParamName=parentNode, ParamDesc=optional the parent node if the new node should appear                                under a specific parent
174. method:ImgButton.removeFromRadioGroup, ParamType= string, ParamName=groupID, ParamDesc=- optional radio group ID (to ensure the widget is removed                                        from the appropriate group.


The following methods were excluded
=== Getter method return type does not match attribute type ===
1. method:Canvas.getContents
2. method:CubeGrid.getRollupValue
3. method:DataBoundComponent.getHilites
4. method:DataSource.getCacheData
5. method:DynamicForm.getErrors
6. method:FormItem.getLeft
7. method:FormItem.getTitle
8. method:FormItem.getTop
9. method:FormulaBuilder.getTestRecord
10. method:ListGrid.getFieldState
11. method:ListGrid.getViewState
12. method:PortalLayout.getNumColumns
13. method:SectionStack.getSections
14. method:TabSet.getSelectedTab
15. method:ValuesManager.getMembers

=== Has param bad name ===
16. method:CubeGrid.hiliteCell

=== Has param with missing type ===
17. classMethod:isc.setAutoDraw
18. classMethod:Time.toShortTime
19. classMethod:Time.toTime
20. method:Canvas.setAccessKey
21. method:ColumnTree.nodeSelected
22. method:FormItem.getDisplayValue
23. method:Tree.getAllNodes

=== Has param without name ===
24. classMethod:DataSource.getFieldValue
25. method:DynamicForm.setTitleOrientation
26. method:FilterBuilder.setTopOperatorAppearance
27. method:FormItem.setTabIndex
28. method:FormulaBuilder.getSamplePrompt
29. method:FormulaBuilder.setFormula
30. method:Gauge.setSectors
31. method:ListGrid.setCriteria
32. method:SummaryBuilder.setSummary
33. method:TileLayout.setTileHeight
34. method:TileLayout.setTileHMargin
35. method:TileLayout.setTileMargin
36. method:TileLayout.setTileSize
37. method:TileLayout.setTileVMargin
38. method:TileLayout.setTileWidth

=== Has required parameter after optional parameter ===
39. classMethod:Class.markUnsupportedMethods
40. classMethod:DMI.call
41. classMethod:TabIndexManager.shiftFocus
42. classMethod:TabIndexManager.shiftFocusWithinGroup
43. classMethod:XMLTools.loadWSDL
44. classMethod:XMLTools.loadXMLSchema
45. method:ListGrid.getBaseStyle

=== Setter method param type does not match attribute type ===
46. method:AdaptiveMenu.setItems
47. method:Button.setIcon
48. method:Button.setIconOrientation
49. method:Calendar.setData
50. method:Canvas.setAccessKey
51. method:Canvas.setBackgroundImage
52. method:Canvas.setClassName
53. method:Canvas.setContents
54. method:Canvas.setEdgeOpacity
55. method:Canvas.setHeight
56. method:Canvas.setHtmlElement
57. method:Canvas.setLeft
58. method:Canvas.setTop
59. method:Canvas.setValuesManager
60. method:Canvas.setWidth
61. method:CanvasItem.setCanvas
62. method:DateItem.setEndDate
63. method:DateItem.setStartDate
64. method:DateRangeItem.setFromDate
65. method:DateRangeItem.setToDate
66. method:Deck.setCurrentPane
67. method:DetailViewer.setData
68. method:Dialog.setButtons
69. method:Dialog.setToolbarButtons
70. method:DrawItem.setFillGradient
71. method:DrawPane.setRotation
72. method:DynamicForm.setAction
73. method:DynamicForm.setValuesManager
74. method:FilterBuilder.setTopOperator
75. method:FormItem.setOptionDataSource
76. method:HTMLFlow.setContents
77. method:Img.setSrc
78. method:ImgButton.setIcon
79. method:ImgButton.setIconOrientation
80. method:ImgSectionHeader.setIcon
81. method:Label.setContents
82. method:Label.setIcon
83. method:Label.setIconOrientation
84. method:Layout.setLayoutMargin
85. method:ListGrid.setAutoFitData
86. method:ListGrid.setAutoFitExtraRecords
87. method:ListGrid.setAutoFitMaxColumns
88. method:ListGrid.setAutoFitMaxHeight
89. method:ListGrid.setAutoFitMaxRecords
90. method:ListGrid.setFieldState
91. method:ListGrid.setMinFieldWidth
92. method:ListGrid.setSelectionAppearance
93. method:ListGrid.setViewState
94. method:Menu.setData
95. method:Menu.setItems
96. method:MenuBar.setMenus
97. method:PickTreeItem.setEmptyDisplayValue
98. method:Portlet.setHeight
99. method:Portlet.setRowHeight
100. method:Progressbar.setLength
101. method:Slider.setLabelHeight
102. method:Slider.setLabelSpacing
103. method:Slider.setLabelWidth
104. method:Slider.setNumValues
105. method:Slider.setRoundPrecision
106. method:Slider.setStepPercent
107. method:Slider.setThumbThickWidth
108. method:Slider.setThumbThinWidth
109. method:Slider.setTrackCapSize
110. method:Slider.setTrackImageType
111. method:Slider.setTrackWidth
112. method:SliderItem.setNumValues
113. method:StatefulCanvas.setIcon
114. method:StatefulCanvas.setIconOrientation
115. method:StretchImg.setSrc
116. method:StretchImgButton.setIcon
117. method:StretchImgButton.setIconOrientation
118. method:TileLayout.setTileHeight
119. method:TileLayout.setTileHMargin
120. method:TileLayout.setTileMargin
121. method:TileLayout.setTileSize
122. method:TileLayout.setTilesPerLine
123. method:TileLayout.setTileVMargin
124. method:TileLayout.setTileWidth
125. method:Toolbar.setButtons
126. method:ToolStripGroup.setControls
127. method:ToolStripGroup.setTitleHeight
128. method:ValuesManager.setDataSource




===== For recording metrics ======
Date	Types	Interfaces	Classes	Objects	Methods	Methods with bad flags	Classes without inheritsFrom attribute	string values with quotes	string values without quotes	string values with period	Arrays defined as 'array of'	Arrays defined as 'Array of'	Arrays defined as 'Array[] of'	Arrays defined as 'array[] of'	Arrays defined as 'array' or 'Array'	String types without baseType	Method params with missing name	Method params with bad name	Method params missing type	Methods with required parameters after optional parameters	Setter Methods with parameter type that does not match the attribute type	Suspected optional parameters that are marked with optional='false'	Getter Methods with return type that does not match the attribute type	Attributes missing R flag	Object attributes marked with W flag	String values without reference	String values where reference is found	Types Generated	Interfaces Generated	Objects Generated	Classes Generated	Methods Generated	Percentage of Types generated	Percentage of Interfaces generated	Percentage of Objects generated	Percentage of Classes generated	Percentage of Methods generated
2017-05-10	229	5	309	67	3555	3	202	216	657	130	1	225	10	0	10	83	15	1	7	7	83	19	15	45	240	130	0	229	5	30	85	503	1	1	0.4477612	0.2750809	0.1414909	

======= For Display Somewhere =======
Metrics for build SNAPSHOT_v11.1d_2017-05-10
===== Information =====
(Informational only, not a problem)
Types: 229
Interfaces: 5
Classes: 309
Objects: 67
Methods: 3,555
string values with quotes: 216
string values without quotes: 657
string values with period: 130
Arrays defined as 'Array of': 225
String values where reference is found: 0
Types Generated: 229
Interfaces Generated: 5
Objects Generated: 30
Classes Generated: 85
Methods Generated: 503
Percentage of Types generated: 100 %
Percentage of Interfaces generated: 100 %
Percentage of Objects generated: 45 %
Percentage of Classes generated: 28 %
Percentage of Methods generated: 14 %

===== Warnings =====
(Does not prevent item from being generated but might indicate a problem or inconsistency in the docs)
Methods with bad flags: 3
Suspected optional parameters that are marked with optional='false': 19
Attributes missing R flag: 45
Object attributes marked with W flag: 240

===== Errors =====
(May or may not be an error in the isc system but prevents proper code generation unless special handling is implemented)
Classes without inheritsFrom attribute: 202
Arrays defined as 'array of': 1
Arrays defined as 'Array[] of': 10
Arrays defined as 'array[] of': 0
Arrays defined as 'array' or 'Array': 10
String types without baseType: 83
Method params with missing name: 15
Method params with bad name: 1
Method params missing type: 7
Methods with required parameters after optional parameters: 7
Setter Methods with parameter type that does not match the attribute type: 83
Getter Methods with return type that does not match the attribute type: 15
String values without reference: 130

